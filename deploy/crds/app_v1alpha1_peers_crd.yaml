apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: peers.app.example.com
spec:
  group: app.example.com
  names:
    kind: Peers
    listKind: PeersList
    plural: peers
    singular: peers
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              properties:
                labels:
                  properties:
                    app:
                      type: string
                    org:
                      type: string
                    role:
                      type: string
                  required:
                  - app
                  - role
                  - org
                  type: object
                name:
                  type: string
              required:
              - name
              - labels
              type: object
            spec:
              properties:
                containers:
                  items:
                    properties:
                      command:
                        items:
                          type: string
                        type: array
                      env:
                        items:
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      image:
                        type: string
                      imagePullPolicy:
                        type: string
                      name:
                        type: string
                      ports:
                        items:
                          properties:
                            containerPort:
                              format: int64
                              type: integer
                          required:
                          - containerPort
                          type: object
                        type: array
                      volumeMounts:
                        items:
                          properties:
                            mountPath:
                              type: string
                            name:
                              type: string
                          required:
                          - mountPath
                          - name
                          type: object
                        type: array
                      workingDir:
                        type: string
                    required:
                    - name
                    - imagePullPolicy
                    - image
                    - workingDir
                    - volumeMounts
                    - env
                    - ports
                    - command
                    type: object
                  type: array
                restartPolicy:
                  type: string
                volumes:
                  items:
                    properties:
                      hostPath:
                        properties:
                          path:
                            type: string
                        required:
                        - path
                        type: object
                      name:
                        type: string
                    required:
                    - name
                    - hostPath
                    type: object
                  type: array
              required:
              - restartPolicy
              - containers
              - volumes
              type: object
          required:
          - apiVersion
          - kind
          - metadata
          - spec
          type: object
        status:
          properties:
            peers:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              items:
                type: string
              type: array
          required:
          - peers
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
